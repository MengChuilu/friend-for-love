<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fengshanjian.friendforlove.repo.dao.MemberMapper">
  <resultMap id="BaseResultMap" type="com.fengshanjian.friendforlove.repo.model.Member">
    <id column="memberid" jdbcType="INTEGER" property="memberid" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="salary" jdbcType="VARCHAR" property="salary" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="height" jdbcType="INTEGER" property="height" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="marriage-status" jdbcType="VARCHAR" property="marriageStatus" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="housing" jdbcType="VARCHAR" property="housing" />
    <result column="car" jdbcType="VARCHAR" property="car" />
    <result column="sla-marriage" jdbcType="VARCHAR" property="slaMarriage" />
    <result column="household-registration" jdbcType="VARCHAR" property="householdRegistration" />
    <result column="children" jdbcType="VARCHAR" property="children" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="album" jdbcType="VARCHAR" property="album" />
    <result column="job-location" jdbcType="VARCHAR" property="jobLocation" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="job-type" jdbcType="VARCHAR" property="jobType" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="father" jdbcType="VARCHAR" property="father" />
    <result column="mother" jdbcType="VARCHAR" property="mother" />
    <result column="brother" jdbcType="VARCHAR" property="brother" />
    <result column="living-status" jdbcType="VARCHAR" property="livingStatus" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="job-level" jdbcType="VARCHAR" property="jobLevel" />
    <result column="housing-location" jdbcType="VARCHAR" property="housingLocation" />
    <result column="job-name" jdbcType="VARCHAR" property="jobName" />
    <result column="blood" jdbcType="VARCHAR" property="blood" />
    <result column="marriage-type" jdbcType="VARCHAR" property="marriageType" />
    <result column="pet" jdbcType="VARCHAR" property="pet" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fengshanjian.friendforlove.repo.model.MemberWithBLOBs">
    <result column="dring" jdbcType="BINARY" property="dring" />
    <result column="smoking" jdbcType="BINARY" property="smoking" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    memberid, nickname, gender, salary, comment, age, height, weight, tags, marriage-status, 
    degree, housing, car, sla-marriage, household-registration, children, avatar, album, 
    job-location, birthday, job-type, school, father, mother, brother, living-status, 
    nation, job-level, housing-location, job-name, blood, marriage-type, pet
  </sql>
  <sql id="Blob_Column_List">
    dring, smoking
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fengshanjian.friendforlove.repo.model.MemberExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fengshanjian.friendforlove.repo.model.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from member
    where memberid = #{memberid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member
    where memberid = #{memberid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fengshanjian.friendforlove.repo.model.MemberExample">
    delete from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fengshanjian.friendforlove.repo.model.MemberWithBLOBs">
    insert into member (memberid, nickname, gender, 
      salary, comment, age, 
      height, weight, tags, 
      marriage-status, degree, housing, 
      car, sla-marriage, household-registration, 
      children, avatar, album, 
      job-location, birthday, job-type, 
      school, father, mother, 
      brother, living-status, nation, 
      job-level, housing-location, job-name, 
      blood, marriage-type, pet, 
      dring, smoking)
    values (#{memberid,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{salary,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{height,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER}, #{tags,jdbcType=VARCHAR}, 
      #{marriageStatus,jdbcType=VARCHAR}, #{degree,jdbcType=VARCHAR}, #{housing,jdbcType=VARCHAR}, 
      #{car,jdbcType=VARCHAR}, #{slaMarriage,jdbcType=VARCHAR}, #{householdRegistration,jdbcType=VARCHAR}, 
      #{children,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{album,jdbcType=VARCHAR}, 
      #{jobLocation,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, #{jobType,jdbcType=VARCHAR}, 
      #{school,jdbcType=VARCHAR}, #{father,jdbcType=VARCHAR}, #{mother,jdbcType=VARCHAR}, 
      #{brother,jdbcType=VARCHAR}, #{livingStatus,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, 
      #{jobLevel,jdbcType=VARCHAR}, #{housingLocation,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, 
      #{blood,jdbcType=VARCHAR}, #{marriageType,jdbcType=VARCHAR}, #{pet,jdbcType=VARCHAR}, 
      #{dring,jdbcType=BINARY}, #{smoking,jdbcType=BINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.fengshanjian.friendforlove.repo.model.MemberWithBLOBs">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberid != null">
        memberid,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="marriageStatus != null">
        marriage-status,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="housing != null">
        housing,
      </if>
      <if test="car != null">
        car,
      </if>
      <if test="slaMarriage != null">
        sla-marriage,
      </if>
      <if test="householdRegistration != null">
        household-registration,
      </if>
      <if test="children != null">
        children,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="album != null">
        album,
      </if>
      <if test="jobLocation != null">
        job-location,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="jobType != null">
        job-type,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="father != null">
        father,
      </if>
      <if test="mother != null">
        mother,
      </if>
      <if test="brother != null">
        brother,
      </if>
      <if test="livingStatus != null">
        living-status,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="jobLevel != null">
        job-level,
      </if>
      <if test="housingLocation != null">
        housing-location,
      </if>
      <if test="jobName != null">
        job-name,
      </if>
      <if test="blood != null">
        blood,
      </if>
      <if test="marriageType != null">
        marriage-type,
      </if>
      <if test="pet != null">
        pet,
      </if>
      <if test="dring != null">
        dring,
      </if>
      <if test="smoking != null">
        smoking,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberid != null">
        #{memberid,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="marriageStatus != null">
        #{marriageStatus,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="housing != null">
        #{housing,jdbcType=VARCHAR},
      </if>
      <if test="car != null">
        #{car,jdbcType=VARCHAR},
      </if>
      <if test="slaMarriage != null">
        #{slaMarriage,jdbcType=VARCHAR},
      </if>
      <if test="householdRegistration != null">
        #{householdRegistration,jdbcType=VARCHAR},
      </if>
      <if test="children != null">
        #{children,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="album != null">
        #{album,jdbcType=VARCHAR},
      </if>
      <if test="jobLocation != null">
        #{jobLocation,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="jobType != null">
        #{jobType,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="father != null">
        #{father,jdbcType=VARCHAR},
      </if>
      <if test="mother != null">
        #{mother,jdbcType=VARCHAR},
      </if>
      <if test="brother != null">
        #{brother,jdbcType=VARCHAR},
      </if>
      <if test="livingStatus != null">
        #{livingStatus,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="jobLevel != null">
        #{jobLevel,jdbcType=VARCHAR},
      </if>
      <if test="housingLocation != null">
        #{housingLocation,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="blood != null">
        #{blood,jdbcType=VARCHAR},
      </if>
      <if test="marriageType != null">
        #{marriageType,jdbcType=VARCHAR},
      </if>
      <if test="pet != null">
        #{pet,jdbcType=VARCHAR},
      </if>
      <if test="dring != null">
        #{dring,jdbcType=BINARY},
      </if>
      <if test="smoking != null">
        #{smoking,jdbcType=BINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fengshanjian.friendforlove.repo.model.MemberExample" resultType="java.lang.Long">
    select count(*) from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member
    <set>
      <if test="record.memberid != null">
        memberid = #{record.memberid,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.height != null">
        height = #{record.height,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.marriageStatus != null">
        marriage-status = #{record.marriageStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.housing != null">
        housing = #{record.housing,jdbcType=VARCHAR},
      </if>
      <if test="record.car != null">
        car = #{record.car,jdbcType=VARCHAR},
      </if>
      <if test="record.slaMarriage != null">
        sla-marriage = #{record.slaMarriage,jdbcType=VARCHAR},
      </if>
      <if test="record.householdRegistration != null">
        household-registration = #{record.householdRegistration,jdbcType=VARCHAR},
      </if>
      <if test="record.children != null">
        children = #{record.children,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.album != null">
        album = #{record.album,jdbcType=VARCHAR},
      </if>
      <if test="record.jobLocation != null">
        job-location = #{record.jobLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.jobType != null">
        job-type = #{record.jobType,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.father != null">
        father = #{record.father,jdbcType=VARCHAR},
      </if>
      <if test="record.mother != null">
        mother = #{record.mother,jdbcType=VARCHAR},
      </if>
      <if test="record.brother != null">
        brother = #{record.brother,jdbcType=VARCHAR},
      </if>
      <if test="record.livingStatus != null">
        living-status = #{record.livingStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.jobLevel != null">
        job-level = #{record.jobLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.housingLocation != null">
        housing-location = #{record.housingLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.jobName != null">
        job-name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.blood != null">
        blood = #{record.blood,jdbcType=VARCHAR},
      </if>
      <if test="record.marriageType != null">
        marriage-type = #{record.marriageType,jdbcType=VARCHAR},
      </if>
      <if test="record.pet != null">
        pet = #{record.pet,jdbcType=VARCHAR},
      </if>
      <if test="record.dring != null">
        dring = #{record.dring,jdbcType=BINARY},
      </if>
      <if test="record.smoking != null">
        smoking = #{record.smoking,jdbcType=BINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update member
    set memberid = #{record.memberid,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      salary = #{record.salary,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      height = #{record.height,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      tags = #{record.tags,jdbcType=VARCHAR},
      marriage-status = #{record.marriageStatus,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      housing = #{record.housing,jdbcType=VARCHAR},
      car = #{record.car,jdbcType=VARCHAR},
      sla-marriage = #{record.slaMarriage,jdbcType=VARCHAR},
      household-registration = #{record.householdRegistration,jdbcType=VARCHAR},
      children = #{record.children,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      album = #{record.album,jdbcType=VARCHAR},
      job-location = #{record.jobLocation,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      job-type = #{record.jobType,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      father = #{record.father,jdbcType=VARCHAR},
      mother = #{record.mother,jdbcType=VARCHAR},
      brother = #{record.brother,jdbcType=VARCHAR},
      living-status = #{record.livingStatus,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      job-level = #{record.jobLevel,jdbcType=VARCHAR},
      housing-location = #{record.housingLocation,jdbcType=VARCHAR},
      job-name = #{record.jobName,jdbcType=VARCHAR},
      blood = #{record.blood,jdbcType=VARCHAR},
      marriage-type = #{record.marriageType,jdbcType=VARCHAR},
      pet = #{record.pet,jdbcType=VARCHAR},
      dring = #{record.dring,jdbcType=BINARY},
      smoking = #{record.smoking,jdbcType=BINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member
    set memberid = #{record.memberid,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      salary = #{record.salary,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      height = #{record.height,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      tags = #{record.tags,jdbcType=VARCHAR},
      marriage-status = #{record.marriageStatus,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      housing = #{record.housing,jdbcType=VARCHAR},
      car = #{record.car,jdbcType=VARCHAR},
      sla-marriage = #{record.slaMarriage,jdbcType=VARCHAR},
      household-registration = #{record.householdRegistration,jdbcType=VARCHAR},
      children = #{record.children,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      album = #{record.album,jdbcType=VARCHAR},
      job-location = #{record.jobLocation,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      job-type = #{record.jobType,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      father = #{record.father,jdbcType=VARCHAR},
      mother = #{record.mother,jdbcType=VARCHAR},
      brother = #{record.brother,jdbcType=VARCHAR},
      living-status = #{record.livingStatus,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      job-level = #{record.jobLevel,jdbcType=VARCHAR},
      housing-location = #{record.housingLocation,jdbcType=VARCHAR},
      job-name = #{record.jobName,jdbcType=VARCHAR},
      blood = #{record.blood,jdbcType=VARCHAR},
      marriage-type = #{record.marriageType,jdbcType=VARCHAR},
      pet = #{record.pet,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fengshanjian.friendforlove.repo.model.MemberWithBLOBs">
    update member
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="marriageStatus != null">
        marriage-status = #{marriageStatus,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="housing != null">
        housing = #{housing,jdbcType=VARCHAR},
      </if>
      <if test="car != null">
        car = #{car,jdbcType=VARCHAR},
      </if>
      <if test="slaMarriage != null">
        sla-marriage = #{slaMarriage,jdbcType=VARCHAR},
      </if>
      <if test="householdRegistration != null">
        household-registration = #{householdRegistration,jdbcType=VARCHAR},
      </if>
      <if test="children != null">
        children = #{children,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="album != null">
        album = #{album,jdbcType=VARCHAR},
      </if>
      <if test="jobLocation != null">
        job-location = #{jobLocation,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="jobType != null">
        job-type = #{jobType,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="father != null">
        father = #{father,jdbcType=VARCHAR},
      </if>
      <if test="mother != null">
        mother = #{mother,jdbcType=VARCHAR},
      </if>
      <if test="brother != null">
        brother = #{brother,jdbcType=VARCHAR},
      </if>
      <if test="livingStatus != null">
        living-status = #{livingStatus,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="jobLevel != null">
        job-level = #{jobLevel,jdbcType=VARCHAR},
      </if>
      <if test="housingLocation != null">
        housing-location = #{housingLocation,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        job-name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="blood != null">
        blood = #{blood,jdbcType=VARCHAR},
      </if>
      <if test="marriageType != null">
        marriage-type = #{marriageType,jdbcType=VARCHAR},
      </if>
      <if test="pet != null">
        pet = #{pet,jdbcType=VARCHAR},
      </if>
      <if test="dring != null">
        dring = #{dring,jdbcType=BINARY},
      </if>
      <if test="smoking != null">
        smoking = #{smoking,jdbcType=BINARY},
      </if>
    </set>
    where memberid = #{memberid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fengshanjian.friendforlove.repo.model.MemberWithBLOBs">
    update member
    set nickname = #{nickname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      salary = #{salary,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      height = #{height,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      tags = #{tags,jdbcType=VARCHAR},
      marriage-status = #{marriageStatus,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      housing = #{housing,jdbcType=VARCHAR},
      car = #{car,jdbcType=VARCHAR},
      sla-marriage = #{slaMarriage,jdbcType=VARCHAR},
      household-registration = #{householdRegistration,jdbcType=VARCHAR},
      children = #{children,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      album = #{album,jdbcType=VARCHAR},
      job-location = #{jobLocation,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      job-type = #{jobType,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      father = #{father,jdbcType=VARCHAR},
      mother = #{mother,jdbcType=VARCHAR},
      brother = #{brother,jdbcType=VARCHAR},
      living-status = #{livingStatus,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      job-level = #{jobLevel,jdbcType=VARCHAR},
      housing-location = #{housingLocation,jdbcType=VARCHAR},
      job-name = #{jobName,jdbcType=VARCHAR},
      blood = #{blood,jdbcType=VARCHAR},
      marriage-type = #{marriageType,jdbcType=VARCHAR},
      pet = #{pet,jdbcType=VARCHAR},
      dring = #{dring,jdbcType=BINARY},
      smoking = #{smoking,jdbcType=BINARY}
    where memberid = #{memberid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fengshanjian.friendforlove.repo.model.Member">
    update member
    set nickname = #{nickname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      salary = #{salary,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      height = #{height,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      tags = #{tags,jdbcType=VARCHAR},
      marriage-status = #{marriageStatus,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      housing = #{housing,jdbcType=VARCHAR},
      car = #{car,jdbcType=VARCHAR},
      sla-marriage = #{slaMarriage,jdbcType=VARCHAR},
      household-registration = #{householdRegistration,jdbcType=VARCHAR},
      children = #{children,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      album = #{album,jdbcType=VARCHAR},
      job-location = #{jobLocation,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      job-type = #{jobType,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      father = #{father,jdbcType=VARCHAR},
      mother = #{mother,jdbcType=VARCHAR},
      brother = #{brother,jdbcType=VARCHAR},
      living-status = #{livingStatus,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      job-level = #{jobLevel,jdbcType=VARCHAR},
      housing-location = #{housingLocation,jdbcType=VARCHAR},
      job-name = #{jobName,jdbcType=VARCHAR},
      blood = #{blood,jdbcType=VARCHAR},
      marriage-type = #{marriageType,jdbcType=VARCHAR},
      pet = #{pet,jdbcType=VARCHAR}
    where memberid = #{memberid,jdbcType=INTEGER}
  </update>
</mapper>